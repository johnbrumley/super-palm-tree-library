
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="../../favicon.ico">

    <title>Starter Template for Bootstrap</title>

    <!-- Bootstrap core CSS -->
    <link href="/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
    <script type="text/javascript" src="/pdfjs-bower/dist/pdf.js"></script>

    <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
    <!--<link href="/bootstrap/dist/assets/css/ie10-viewport-bug-workaround.css" rel="stylesheet">-->

    <!-- Just for debugging purposes. Don't actually copy these 2 lines! -->
    <!--[if lt IE 9]><script src="../../assets/js/ie8-responsive-file-warning.js"></script><![endif]-->
    <!--<script src="/bootstrap/dist/assets/js/ie-emulation-modes-warning.js"></script>-->

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <style>
    body {padding-top: 50px;}
    .row {padding-top: 15px; padding-bottom: 15px; }
    .image img {max-width: 170px;max-height: 170px; width: auto;height: auto;margin: 0 auto;}


    /******************

    Grid List View

    *******************/

    #products .item.list-group-item
    {
        float: none;
        width: 100%;
        background-color:transparent;
        border:0;
        border-bottom:1px dotted grey;

    }
    #products .item.grid-group-item:first-child{display:none;}
    #products .item.grid-group-item .col{float: none;width:100%;}
    #products .item.grid-group-item .col:last-child{float: none;width:100%;border-bottom:1px dotted grey;padding-bottom: 15px;}
    #products .item.grid-group-item { padding-top:15px;}
    .item.list-group-item img{float:left;}
    #list{padding-left: 0;}
</style>


  </head>

  <body>

    <nav class="navbar navbar-default navbar-fixed-top">
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
        </div>
        <div id="navbar" class="collapse navbar-collapse">
          <ul class="nav navbar-nav">
              <li>
                <a href="#" id="list" >
                  <span class="glyphicon glyphicon-th-list"></span>&nbsp;List
                </a>
              </li>
              <li>  
                <a href="#" id="grid">
                  <span class="glyphicon glyphicon-th"></span>&nbsp;Grid
                </a>
              </li>
          </ul>
         <div class="col-sm-3 col-md-3 pull-right">
        <form class="navbar-form" role="search" action="/search" method="get">
        <div class="input-group">
            <input type="text" class="form-control" placeholder="Search" name="s" id="srch-term">
            <div class="input-group-btn">
                <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
            </div>
        </div>
        </form>
        </div>

        </div><!--/.nav-collapse -->
      </div>
    </nav>

    <div class="container">
      <div id="products" class="">
        <div class="item list-group-item clearfix col-md-4">
          <div class="col col-md-4">Title</div>
          <div class="col col-md-4">Author</div>
          <div class="col col-md-4">Total Pages</div>
        </div>
        {{#each userlist}}
            <div data-pdf-file="{{_id}}.pdf" class="item item-content list-group-item clearfix col-xs-4 col-sm-4 col-md-4">
              <div class="col col-md-12 image"></div>
              <div class="col col-xs-4 col-sm-4 col-md-4">{{_id}}</div>
              <div class="col col-xs-4 col-sm-4 col-md-4">----</div>
              <div class="col col-xs-4 col-sm-4 col-md-4">{{totalPages}}</div>
            </div>
        {{/each}}
      </div>
    </div><!-- /.container -->



    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="/jquery/dist/jquery.min.js"></script>
    <script>window.jQuery || document.write('<script src="/jquery/dist/assets/js/vendor/jquery.min.js"><\/script>')</script>
    <script type="text/javascript">
      $('#list').click(function(){$('#products .item').removeClass('grid-group-item').addClass('list-group-item clearfix');});
      $('#grid').click(function(){$('#products .item').removeClass('list-group-item clearfix').addClass('grid-group-item');});
    </script>
    <script src="/bootstrap/dist/js/bootstrap.min.js"></script>

<script type="text/javascript">
      // set the pdfjs worker source. not sure if PDFjs uses 'webworkers' API of HTML5
      PDFJS.workerSrc = "/pdfjs-bower/dist/pdf.worker.js";

      $(document).ready(function() {

        // check for necessary features
        //featureCheck();

        var PDF_FILES_DIRECTORY = "/done/";
        // this demo is currenlty put as gist which does not support directories
        // these files should exist in the given path to display correctly

    

        $('.item-content').each(function( index ) {
            var CURRENT_PDF = $(this).attr('data-pdf-file');
            console.log(CURRENT_PDF);
            PDFJS.getDocument( PDF_FILES_DIRECTORY + CURRENT_PDF ).then( function (pdf) {

                pdf.getPage(1).then( function (page) {

                    var viewport = page.getViewport(0.5);
                    // PDF.js returns a promise when it gets a particular page from the pdf object
                    // A canvas element is used to render the page and convert into an image thumbnail
                    // if single canvas is used, the content gets overridden when PDF.js promises resolve for subsequent files
                    // so a dedicated canvas element is created for rendering a thumbnail for each pdf
                    // the canvas element is discarded once the thumbnail is created.
                    var canvas = document.createElement('canvas');
                    var ctx = canvas.getContext('2d');
                    canvas.height = viewport.height;
                    canvas.width = viewport.width;

                    var renderContext = {
                        canvasContext: ctx,
                        viewport: viewport
                    };

                    page.render(renderContext).then( function() {

                        //set to draw behind current content
                        ctx.globalCompositeOperation = "destination-over";
                        //set background color
                        ctx.fillStyle = "#fff";
                        //draw on entire canvas
                        ctx.fillRect( 0, 0, canvas.width, canvas.height );
                        // create an img from the canvas which contains the page contents
                        var img_src = canvas.toDataURL();
                        var $img = $("<img>").attr("src", img_src);

                        var file_details = {
                            "name": CURRENT_PDF,
                            "pages": pdf.pdfInfo.numPages
                        };

                        var $thumb = $("div[data-pdf-file='"+CURRENT_PDF+"'] div.image").append($img);
                        //$thumb.appendTo
                        // we have created a thumbnail and rendered the img from the canvas
                        // discard the temporary canvas created for rendering this thumbnail
                        canvas.remove();                    
                        //$(canvas).remove();

                    });

              }); // end of getPage

            }); // end of getDocument

        }); // end of each

      }); // end of doc ready


</script>

  </body>
</html>
